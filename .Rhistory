Q
runApp('absenteismo')
runApp()
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
View(inputs)
View(arquivodados)
View(arquivodados)
datapath
arquivodados$datapath
arquivodados
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
library(devtools)
install_github("pedroliman/oshcba")
shiny::runApp('absenteismo')
library(oshcba)
runApp('absenteismo')
runApp('absenteismo')
shiny::runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
library(devtools)
install_github("pedroliman/oshcba")
shiny::runApp('absenteismo')
shiny::runApp('absenteismo')
library(oshcba)
inputs = carregar_inputs()
library(shiny)
library(ggplot2)
# Retire o comentÃ¡rio abaixo para rodar o app
library(oshcba)
library(readxl)
library(mc2d)
library(dplyr)
inputs = carregar_inputs()
getwd()
inputs = carregar_inputs("D:/DADOS/dev/oshcba/Dados.xlsx")
parametros = carregar_parametros(inputs)
parametros = obter_parametros(inputs)
parametros = obter_parametros(inputs)
parametros = obter_parametros(inputs)
a = "dasdad"
parametros = obter_parametros(inputs)
a = "dasdad"
parametros = obter_parametros(inputs)
a = "dasdad"
parametros = obter_parametros(inputs)
a = "dasdad"
parametros = obter_parametros(inputs)
a = "dasdad"
a = "dasdad"
a = "dasdad"
browser()
parametros = obter_parametros(inputs)
a = "dasdad"
browser()
parametros = obter_parametros(inputs)
browser()
a = "dasdad"
browser()
parametros = obter_parametros(inputs)
browser()
a = "dasdad"
browser()
parametros = obter_parametros(inputs)
browser()
a = "dasdad"
browser()
parametros = obter_parametros(inputs)
browser()
a = "dasdad"
browser()
parametros = obter_parametros(inputs)
browser()
a = "dasdad"
browser()
parametros = obter_parametros(inputs)
browser()
a = "dasdad"
parametros = obter_parametros(inputs)
parametros = obter_parametros(inputs)
parametros = obter_parametros(inputs)
parametros = obter_parametros(inputs)
a = "dasdad"
a = a + 1
a
a = "dasdad"
a = a + 1
a
a = "dasdad"
a = a + 1
a
exit
help
parametros = carregar_inputs(inputs)
browser()
ls()
parametros = obter_parametros()
browser()
parametros = obter_parametros(inputs)
browser()
parametros = obter_parametros(inputs)
browser()
parametros = obter_parametros(inputs)
browser()
shiny::runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
runApp('absenteismo')
library(devtools)
install_github("pedroliman/oshcba")
runApp('absenteismo')
library(oshcba)
runApp('absenteismo')
install_github("pedroliman/oshcba")
runApp('absenteismo')
lybrary(oshcba)
library(oshcba)
simular_temp_absenteismo()
library(shiny)
library(mc2d)
library(ggplot2)
library(lhs)
library(readxl)
library(dplyr)
library(oshcba)
simulado = simular_temp_absenteismo()
View(simulado)
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto)
library(purrr)
walk(.x = dados_grafico, .f = qplot, geom = "histogram")
walk(.x = dados_grafico, .f = qplot, geom = "histogram")
walk(.x = dados_grafico, .f = qplot, geom = "histogram")
walk(.x = dados_grafico, .f = qplot, geom = "histogram", main = "Teste")
library(ggplot2)
walk(.x = dados_grafico, .f = qplot, geom = "histogram", main = "Teste")
qplot(dados_grafico$CustoTotalCBR, geom = "histogram")
qplot(dados_grafico$CustoTotalCBR, geom = "histogram")
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.x = "SemIniciativa")
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.x == "SemIniciativa")
walk(.x = dados_grafico, .f = qplot, geom = "histogram", main = "Teste")
walk(.x = dados_grafico, .f = qplot, geom = "histogram", main = "Teste")
walk(.x = dados_grafico, .f = qplot, geom = "histogram", main = "Teste")
walk(.x = dados_grafico, .f = hist,, main = "Teste")
walk(.x = dados_grafico[[2:5]], .f = qplot, geom = "histogram", main = "Teste")
walk(.x = dados_grafico[2:5], .f = qplot, geom = "histogram", main = "Teste")
walk(.x = dados_grafico[2:5], .f = qplot, geom = "histogram", main = "Teste")
dados_grafico[2:5]
dados_grafico[2:5]
walk(.x = dados_grafico[2:5], .f = hist, main = "Teste")
pwalk(.x = dados_grafico[2:5], .f = hist, list(main = variaveis))
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
pwalk(.x = dados_grafico[2:5], .f = hist, list(main = variaveis))
pwalk(.x = dados_grafico[2:5], .f = hist, list(main = variaveis))
variaveis = list("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
pwalk(.x = dados_grafico[2:5], .f = hist, list(main = variaveis))
pwalk(.x = dados_grafico[2:5], .f = hist, list(main = variaveis))
walk2(.x = dados_grafico[2:5], .f = hist, .y = variaveis)
walk2(.x = dados_grafico[2:5], .f = hist, .y = list(main = variaveis))
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
walk2(.x = dados_grafico[2:5], .f = hist, .y = list(main = variaveis))
?melt
library(reshape2)
?melt
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~variable, scales = 'free_x')
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.x == "SemIniciativa")
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 10) + facet_wrap(~variable, scales = 'free_x')
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.x == "SemIniciativa")
View(dados_grafico)
simulado = simular_temp_absenteismo()
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.x == "SemIniciativa")
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
simulado = simular_temp_absenteismo()
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) # %>% filter(Cenario.x == "SemIniciativa")
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
simulado = simular_temp_absenteismo()
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) # %>% filter(Cenario.x == "SemIniciativa")
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
simulado = simular_temp_absenteismo()
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
dados_grafico = simulado %>% select(CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) # %>% filter(Cenario.x == "SemIniciativa")
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
dados_grafico = filter(dados_grafico, Cenario.y == "Iniciativa1")
dados_grafico = simulado %>% select(Cenario.y, CustoTotalCBR, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.y == "Iniciativa1")
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
simulado = simular_temp_absenteismo()
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
dados_grafico = simulado %>% select(Cenario.y, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.y == "Iniciativa1")
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
ggplot(data = melt(dados_grafico), mapping = aes(x = variaveis)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, ncol = 1)
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15)
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_null()
dados_grafico = simulado %>% select(Cenario.y, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) # %>% filter(Cenario.y == "Iniciativa1")
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_grid(BeneficioTotal ~ Cenario.y)
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_grid(BeneficioTotal ~ Cenario.y)
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_grid(. ~ Cenario.y)
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_grid(RazaoBeneficioCusto ~ Cenario.y)
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_grid(. ~ Cenario.y)
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
p + facet_grid(. ~ cyl)
mpg
ggplot(mpg, aes(displ, cty))
ggplot(mpg, aes(displ, cty)) + geom_point()
facet_grid(. ~ cyl)
p <- ggplot(mpg, aes(displ, cty)) + geom_point()
p + facet_grid(. ~ cyl)
ggplot(data = melt(dados_grafico), mapping = aes(BeneficioAbsenteismo, BeneficioTotalCBR)) +
geom_histogram(bins = 15) + facet_grid(. ~ Cenario.y)
ggplot(data = melt(dados_grafico), mapping = aes(BeneficioAbsenteismo, BeneficioTotalCBR))
ggplot(data = melt(dados_grafico), mapping = aes(adasd,ad)) +
geom_histogram(bins = 15) + facet_grid(. ~ Cenario.y)
aes(x = value)
ggplot(data = melt(dados_grafico), mapping = aes(x = value))
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15)
library(shiny)
library(mc2d)
library(ggplot2)
library(lhs)
library(readxl)
library(dplyr)
library(oshcba)
library(reshape2)
library(purrr)
simulado = simular_temp_absenteismo()
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
dados_grafico = simulado %>% select(Cenario.y, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) # %>% filter(Cenario.y == "Iniciativa1")
# Nada do que estÃ¡ aqui em baixo funcionou. Preciso estudar o GGPLOT para fazer estas coisas:
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
dados_grafico = simulado %>% select(Cenario.y, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.y == "Iniciativa1")
# Nada do que estÃ¡ aqui em baixo funcionou. Preciso estudar o GGPLOT para fazer estas coisas:
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
library(oshcba)
runApp()
shiny::runApp()
runApp()
runApp()
library(oshcba)
resultados = simular_cba("Dados.xlsx")
resultados = simular_cba("Dados.xlsx", modo = "completo")
dados_simulados = resultados
str(dados_simulados)
shiny::runApp()
resultados$Resultados_CBR
resultados_cbr = resultados$Resultados_CBR
ggplot(data=resultados_cbr, aes(resultados_cbr$Soma_DespesaTurnover.y)) +
geom_histogram(aes(y =..density..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
geom_density(col=2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
ggplot(data=resultados_cbr, aes(resultados_cbr$Soma_DespesaTurnover.y)) +
geom_histogram(aes(y =..mean..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
geom_density(col=2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
ggplot(data=resultados_cbr, aes(resultados_cbr$Soma_DespesaTurnover.y)) +
geom_histogram(aes(y =..average..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
geom_density(col=2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
runApp()
runApp('D:/dev/cba-under-risk/study_models/risk-mc2d')
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
capture.output()
runApp()
resultados_cbr = resultados$Resultados_CBR
runApp('D:/dev/cba-under-risk/study_models/risk-pedro')
runApp('D:/dev/cba-under-risk/study_models/risk-mc2d')
runApp()
dados = resultados_cbr %>% filter(Cenario.y == input$Iniciativa) %>% select(Cenario.y, BeneficioAbsenteismo)
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
qplot(dados[,2],fill=I("blue"),main=names(dados[,2]))
dados[,2]
dados[,3]
qplot(dados[,3],fill=I("blue"),main=names(dados[,3]))
names(dados[,3])
names(dados[,3])
names(dados[,3])
as.character(names(dados[,3])
qplot(dados[,3],fill=I("blue"),main=as.character(names(dados[,3]))
dados[,3]
qplot(, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
ggplot(data=resultados_cbr, aes(resultados_cbr$Soma_DespesaTurnover.y)) +
geom_histogram(aes(y =..average..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
geom_density(col=2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
as.character(names(dados[,3]))
qplot(dados[,3],fill=I("blue"),main=as.character(names(dados[,3])))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.5) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.6) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_line(aes(y = quantile(dados[,3],0.90), colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
probs = (0.025,0.975)
quantiles =  quantile(dados[,3],probs)
probs = (0.025,0.975)
quantiles =  quantile(dados[,3],probs)
probs = (0.025,0.975)
probs = (0.025, 0.975)
probs = c(0.025, 0.975)
quantiles =  quantile(dados[,3],probs)
var = dados[,3]
quantiles =  quantile(var,probs)
quantiles =  quantile(as.vector(var),probs)
quantiles =  mapply(quantile, var, MoreArgs=list(probs=probs, name=FALSE))
resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo) %>% [,3]
var = dados[,3]
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
confint(var_fit)
var_fit = fitdistrplus::fitdist(var,"norm")
install.packages(fitdistrplus)
install.packages("fitdistrplus")
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
confint(var_fit)
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo) %>%
var = dados[,3]
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
var = dados[,3]
var_fit = fitdistrplus::fitdist(var,"norm")
var_fit = fitdistrplus::fitdist(as.numeric(var),"norm")
var
var = dplyr::pull(dados[,3])
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
paste("Media = ", var_medio)
paste("Media = ", round(var_medio,2))
confint(var_fit)
confint(var_fit, parm = c("mean"))
paste("Media = ", round(var_medio,2))
confint(var_fit, parm = c("mean"))
runApp()
resultados = simular_cba(modo = "completo")
resultados = simular_cba("D:/dev/oshcbaapp", modo = "completo")
resultados = simular_cba("D:/dev/oshcbaapp/Dados.xlsx", modo = "completo")
runApp()
library(oshcba)
library(shiny)
library(shinythemes)
library(oshcba)
library(ggplot2)
library(readxl)
library(mc2d)
library(dplyr)
library(reshape2)
library(purrr)
library(fitdistrplus)
runApp()
runApp()
