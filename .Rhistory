mean(resultados_cbr[variavel])
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
mean(resultados_cbr[variavel])
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
warnings()
resultados_cbr.df = as.data.frame(resultados_cbr)
resultados_cbr.df
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
resultados_cbr.df[variavel]
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
resultados_cbr.df[[variavel]]
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
resultados_cbr.df[[variavel]]
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
resultados_cbr.df[[variavel]]
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
resultados_cbr.df[[variavel]]
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
resultados_cbr.df[[variavel]]
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
resultados_cbr.df[[variavel]]
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
mean(resultados_cbr.df[[variavel]])
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
mean(resultados_cbr.df[[variavel]])
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
mean(resultados_cbr.df[[variavel]])
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
print(mean(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
print(mean(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
print(mean(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
media_var(resultados_cbr.df[[variavel]])
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
media_var(resultados_cbr.df[[variavel]])
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
media_var(resultados_cbr.df[[variavel]])
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
print(i)
variavel = variaveis[i]
print(variavel)
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
plot_var(var = resultados_cbr.df[[variavel]], nome = variavel)
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
library(ggplot2)
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
plot_var(var = resultados_cbr.df[[variavel]], nome = variavel)
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
plot_var(var = resultados_cbr.df[[variavel]], nome = variavel)
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
plot_var(var = resultados_cbr.df[[variavel]], nome = variavel)
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
plot_var(var = resultados_cbr.df[[variavel]], nome = variavel)
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
print(plot_var(var = resultados_cbr.df[[variavel]], nome = variavel))
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
print(plot_var(var = resultados_cbr.df[[variavel]], nome = variavel))
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
library(oshcba)
library(dplyr)
library(ggplot2)
# Declarando as Funções para o Gráfico
iniciativa = "Iniciativa1"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
caminho_dados = "D:/OneDrive/Analise_SESI/Dados.xlsx"
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados_cbr = resultados$Resultados_CBR
dados = resultados_cbr %>% filter(Cenario.y == iniciativa)
variaveis = names(dados)
variaveis = variaveis[40:60]
resultados_cbr.df = as.data.frame(resultados_cbr)
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
print(plot_var(var = resultados_cbr.df[[variavel]], nome = variavel))
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
library(oshcba)
library(dplyr)
library(ggplot2)
# Declarando as Funções para o Gráfico
iniciativa = "Iniciativa1"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
caminho_dados = "D:/OneDrive/Analise_SESI/Dados.xlsx"
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados_cbr = resultados$Resultados_CBR
dados = resultados_cbr %>% filter(Cenario.y == iniciativa)
variaveis = names(dados)
variaveis = variaveis[40:60]
resultados_cbr.df = as.data.frame(resultados_cbr)
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
print(plot_var(var = resultados_cbr.df[[variavel]], nome = variavel))
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
shiny::runApp()
caminho_dados = "D:/OneDrive/Analise_SESI/Dados.xlsx"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
library(oshcba)
library(dplyr)
library(ggplot2)
caminho_dados = "D:/OneDrive/Analise_SESI/Dados.xlsx"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados_cbr = resultados$Resultados_CBR
resultados_descontados = resultados$Resultados_Descontados
oshcba::exportar_dados_simulados(resultados_cbr)
caminho_dados = "D:/OneDrive/Analise_SESI/Template_Dados_Brunning_v4.xslx"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
library(oshcba)
library(dplyr)
library(ggplot2)
caminho_dados = "D:/OneDrive/Analise_SESI/Template_Dados_Brunning_v4.xslx"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
caminho_dados = "D:/OneDrive/Analise_SESI/Template_Dados_Brunning_v4.xlsx"
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
caminho_dados = "D:/OneDrive/Analise_SESI/Template_Dados_Brunning_v4.xlsx"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
caminho_dados = "D:/OneDrive/Analise_SESI/Template_Dados_Brunning_v4.xlsx"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
caminho_dados = "D:/OneDrive/Analise_SESI/Dados_limpo.xlsx"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
caminho_dados = "D:/OneDrive/Analise_SESI/Template_Dados_Brunning_v4.xlsx"
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
iniciativa = "Iniciativa1"
dados = resultados_cbr %>% filter(Cenario.y == iniciativa)
variaveis = names(dados)
variaveis = variaveis[40:60]
resultados_cbr.df = as.data.frame(resultados_cbr)
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
print(plot_var(var = resultados_cbr.df[[variavel]], nome = variavel))
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
caminho_dados = "D:/OneDrive/Analise_SESI/Template_Dados_Brunning_v4.xlsx"
media_var = function(var){
media_text = paste("Média = ", round(mean(var),2))
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
}
plot_var = function(var, nome) {
title = nome
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
}
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados_cbr = resultados$Resultados_CBR
resultados_descontados = resultados$Resultados_Descontados
# Escrevendo Planilha de Dados
oshcba::exportar_dados_simulados(resultados_cbr)
## Resultados por Iniciativa
iniciativa = "Iniciativa1"
dados = resultados_cbr %>% filter(Cenario.y == iniciativa)
variaveis = names(dados)
variaveis = variaveis[40:60]
resultados_cbr.df = as.data.frame(resultados_cbr)
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
print(plot_var(var = resultados_cbr.df[[variavel]], nome = variavel))
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
caminho_dados = "D:/OneDrive/Analise_SESI/Template_Dados_Brunning_v4.xlsx"
resultados = simular_cba(ArquivoInputs = caminho_dados, modo = "completo")
resultados_cbr = resultados$Resultados_CBR
resultados_descontados = resultados$Resultados_Descontados
iniciativa = "Iniciativa1"
dados = resultados_cbr %>% filter(Cenario.y == iniciativa)
variaveis = names(dados)
variaveis = variaveis[40:60]
resultados_cbr.df = as.data.frame(resultados_cbr)
for (i in 1:length(variaveis)) {
variavel = variaveis[i]
print(variavel)
print(plot_var(var = resultados_cbr.df[[variavel]], nome = variavel))
print(media_var(resultados_cbr.df[[variavel]]))
# variavel = "CustoTotalCBR"
# resultados_cbr[[variavel]]
}
library(devtools)
install_github("pedroliman/oshcba")
shiny::runApp()
shiny::runApp()
library(devtools)
install_github("pedrolima/n")
install_github("pedroliman/oshcba")
runApp()
shiny::runApp()
library(oshcba)
resultados = simular_cba(modo = "completo")
shiny::runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github("pedroliman/oshcba")
devtools::install_github("pedroliman/oshcba@1.2.-beta", force = TRUE)
