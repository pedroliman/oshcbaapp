geom_histogram(bins = 15)
library(shiny)
library(mc2d)
library(ggplot2)
library(lhs)
library(readxl)
library(dplyr)
library(oshcba)
library(reshape2)
library(purrr)
simulado = simular_temp_absenteismo()
variaveis = c("RazaoBeneficioCusto", "BeneficioTotal", "BeneficioAbsenteismo", "CustoTotalCBR")
dados_grafico = simulado %>% select(Cenario.y, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) # %>% filter(Cenario.y == "Iniciativa1")
# Nada do que está aqui em baixo funcionou. Preciso estudar o GGPLOT para fazer estas coisas:
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
dados_grafico = simulado %>% select(Cenario.y, BeneficioAbsenteismo, BeneficioTotalCBR, RazaoBeneficioCusto) %>% filter(Cenario.y == "Iniciativa1")
# Nada do que está aqui em baixo funcionou. Preciso estudar o GGPLOT para fazer estas coisas:
ggplot(data = melt(dados_grafico), mapping = aes(x = value)) +
geom_histogram(bins = 15) + facet_wrap(~variable, scales = 'free_x')
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
library(oshcba)
runApp()
shiny::runApp()
runApp()
runApp()
library(oshcba)
resultados = simular_cba("Dados.xlsx")
resultados = simular_cba("Dados.xlsx", modo = "completo")
dados_simulados = resultados
str(dados_simulados)
shiny::runApp()
resultados$Resultados_CBR
resultados_cbr = resultados$Resultados_CBR
ggplot(data=resultados_cbr, aes(resultados_cbr$Soma_DespesaTurnover.y)) +
geom_histogram(aes(y =..density..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
geom_density(col=2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
ggplot(data=resultados_cbr, aes(resultados_cbr$Soma_DespesaTurnover.y)) +
geom_histogram(aes(y =..mean..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
geom_density(col=2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
ggplot(data=resultados_cbr, aes(resultados_cbr$Soma_DespesaTurnover.y)) +
geom_histogram(aes(y =..average..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
geom_density(col=2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
runApp()
runApp('D:/dev/cba-under-risk/study_models/risk-mc2d')
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
capture.output()
runApp()
resultados_cbr = resultados$Resultados_CBR
runApp('D:/dev/cba-under-risk/study_models/risk-pedro')
runApp('D:/dev/cba-under-risk/study_models/risk-mc2d')
runApp()
dados = resultados_cbr %>% filter(Cenario.y == input$Iniciativa) %>% select(Cenario.y, BeneficioAbsenteismo)
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
qplot(dados[,2],fill=I("blue"),main=names(dados[,2]))
dados[,2]
dados[,3]
qplot(dados[,3],fill=I("blue"),main=names(dados[,3]))
names(dados[,3])
names(dados[,3])
names(dados[,3])
as.character(names(dados[,3])
qplot(dados[,3],fill=I("blue"),main=as.character(names(dados[,3]))
dados[,3]
qplot(, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
ggplot(data=resultados_cbr, aes(resultados_cbr$Soma_DespesaTurnover.y)) +
geom_histogram(aes(y =..average..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha = .2) +
geom_density(col=2) +
labs(title="Histogram for Age") +
labs(x="Age", y="Count")
as.character(names(dados[,3]))
qplot(dados[,3],fill=I("blue"),main=as.character(names(dados[,3])))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.4) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.5) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.6) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(dados[,3], geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_line(aes(y = quantile(dados[,3],0.90), colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
probs = (0.025,0.975)
quantiles =  quantile(dados[,3],probs)
probs = (0.025,0.975)
quantiles =  quantile(dados[,3],probs)
probs = (0.025,0.975)
probs = (0.025, 0.975)
probs = c(0.025, 0.975)
quantiles =  quantile(dados[,3],probs)
var = dados[,3]
quantiles =  quantile(var,probs)
quantiles =  quantile(as.vector(var),probs)
quantiles =  mapply(quantile, var, MoreArgs=list(probs=probs, name=FALSE))
resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo) %>% [,3]
var = dados[,3]
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
confint(var_fit)
var_fit = fitdistrplus::fitdist(var,"norm")
install.packages(fitdistrplus)
install.packages("fitdistrplus")
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
confint(var_fit)
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo) %>%
var = dados[,3]
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
var = dados[,3]
var_fit = fitdistrplus::fitdist(var,"norm")
var_fit = fitdistrplus::fitdist(as.numeric(var),"norm")
var
var = dplyr::pull(dados[,3])
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
paste("Media = ", var_medio)
paste("Media = ", round(var_medio,2))
confint(var_fit)
confint(var_fit, parm = c("mean"))
paste("Media = ", round(var_medio,2))
confint(var_fit, parm = c("mean"))
runApp()
resultados = simular_cba(modo = "completo")
resultados = simular_cba("D:/dev/oshcbaapp", modo = "completo")
resultados = simular_cba("D:/dev/oshcbaapp/Dados.xlsx", modo = "completo")
runApp()
library(oshcba)
library(shiny)
library(shinythemes)
library(oshcba)
library(ggplot2)
library(readxl)
library(mc2d)
library(dplyr)
library(reshape2)
library(purrr)
library(fitdistrplus)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
search()
detach(fitdistrplus)
detach("fitdistrplus")
search()
shiny::runApp()
runApp()
runApp()
library(oshcba)
library(fitdistrplus)
library(shiny)
library(shinythemes)
library(oshcba)
library(ggplot2)
library(readxl)
library(mc2d)
library(dplyr)
library(reshape2)
library(purrr)
runApp()
shiny::runApp()
resultados_cbr = resultados$Resultados_CBR
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
var = dplyr::pull(dados[,3])
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
paste("Media = ", round(var_medio,2))
confint(var_fit, parm = c("mean"))
resultados = simular_cba(modo = "completo")
resultados = simular_cba("D:/dev/oshcba/tests/testthat/Dados.xslx",modo = "completo")
resultados = simular_cba("D:/dev/oshcba/tests/testthat/Dados.xlsx",modo = "completo")
resultados_cbr = resultados$Resultados_CBR
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
var = dplyr::pull(dados[,3])
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
paste("Media = ", round(var_medio,2))
confint(var_fit, parm = c("mean"))
a = confint(var_fit, parm = c("mean"))
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
media_text = paste("Media = ", round(var_medio,2))
a = confint(var_fit, parm = c("mean"))
paste(media_text, "(", a[1], a[2],") com 95% de confianca")
a = round(confint(var_fit, parm = c("mean")),2)
paste(media_text, "(", a[1], a[2],") com 95% de confianca")
paste(media_text, " entre ( ", a[1]," e " a[2],") com 95% de confianca")
paste(media_text, " entre ( ", a[1]," e ", a[2],") com 95% de confianca")
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
media_text = paste("Media = ", round(var_medio,2))
a = round(confint(var_fit, parm = c("mean")),2)
paste(media_text, "entre (", a[1],"e", a[2],") com 95% de confianca.")
runApp()
names(dados[,3])
names(var) = names(dados[,3])
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
var = dplyr::pull(dados[,3])
names(var) = names(dados[,3])
qplot(var, geom = 'blank') +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
names(var) = names(dados[,3])
names(var)
names(dados[,3])
colnames(var) = names(dados[,3])
colnames(var)
colnames(var) = "asd"
rownames(var) = names(dados[,3])
names(var)
var = dplyr::pull(dados[,3])
title = names(dados[,3])
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
runApp()
View(resultados_cbr)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(devtools)
install_github("pedroliman/oshcba")
simular_cba()
simular_cba("D:/dev/oshcbaapp/Dados.xslx")
simular_cba("D:/dev/oshcbaapp/Dados.xlsx")
cba = simular_cba("D:/dev/oshcbaapp/Dados.xlsx")
cba = simular_cba("D:/dev/oshcbaapp/Dados.xlsx", moco = "completo")
cba = simular_cba("D:/dev/oshcbaapp/Dados.xlsx", modo = "completo")
resultados = cba$Resultados_Descontados
ggplot(data = resultados, aes(x = resultados$DespesaTurnover, y = resultados$Replicacao, color = resultados$Cenario)) +
geom_point()
ggplot(data = resultados,
aes(
x = resultados$CustoMedSubstitu,
y = resultados$DespesaTurnover,
color = resultados$Cenario)) +
geom_point()
ggplot(data = resultados,
aes(
x = CustoMedSubstitu,
y = DespesaTurnover,
color = Cenario)) +
geom_point()
View(resultados)
resultados_cbr = resultados$Resultados_CBR
resultados_cbr = cba$Resultados_CBR
ggplot(data = resultados,
aes(
x = resultados$Replicacao,
y = DespesaTurnover,
color = Cenario)) +
geom_point()
cba = simular_cba("D:/dev/oshcbaapp/Dados.xlsx", modo = "completo")
resultados_cbr = cba$Resultados_CBR
resultados = cba$Resultados_Descontados
ggplot(data = resultados,
aes(
x = resultados$Replicacao,
y = DespesaTurnover,
color = Cenario)) +
geom_point()
cba = simular_cba("D:/dev/oshcbaapp/Dados.xlsx", modo = "completo")
resultados_cbr = cba$Resultados_CBR
resultados = cba$Resultados_Descontados
ggplot(data = resultados,
aes(
x = resultados$Replicacao,
y = DespesaTurnover,
color = Cenario)) +
geom_point()
ggplot(data = resultados,
aes(
x = resultados$Replicacao,
y = DespesaTurnover,
color = Cenario,
shape = Cenario)) +
geom_point()
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
var = dplyr::pull(dados[,3])
title = names(dados[,3])
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
stat_smooth()
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
stat_smooth(aes(y ~ x))
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
stat_smooth(aes(y ~ x))
dados = resultados_cbr
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., color = Cenario.y), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., color = Cenario.y), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., color = Cenario.y), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
dados = resultados_cbr
View(dados)
resultados_cbr = cba$Resultados_CBR
resultados = cba$Resultados_Descontados
ggplot(data = resultados,
aes(
x = resultados$Replicacao,
y = DespesaTurnover,
color = Cenario)) +
geom_point()
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
var = dplyr::pull(dados[,3])
title = names(dados[,3])
qplot(var, geom = 'blank', main=title) +
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
# stat_function(fun = dnorm, aes(colour = 'Normal')) +
geom_histogram(aes(y = ..density..), alpha = 0.7) +
scale_colour_manual(name = 'Density', values = c('red', 'blue')) +
theme(legend.position = c(0.85, 0.85))
var_fit = fitdistrplus::fitdist(var,"norm")
var_medio = as.numeric(var_fit$estimate[["mean"]])
media_text = paste("Media = ", round(var_medio,2))
a = round(confint(var_fit, parm = c("mean")),2)
paste(media_text, "entre (", a[1],"e", a[2],") com 95% de confianca.")
library(oshcba)
getwd()
ls
ls
getwd()
cba = simular_cba("./Dados.xlsx")
cba = simular_cba("./Dados.xlsx", modo = "completo")
resultados_cbr = cba$Resultados_CBR
resultados = cba$Resultados_Descontados
ggplot(data = resultados,
aes(
x = resultados$Replicacao,
y = DespesaTurnover,
color = Cenario)) +
geom_point()
library(ggplot2)
teste = quantile(var, c(0.275, 0.975))
var = dplyr::pull(dados[,3])
dados = resultados_cbr %>% filter(Cenario.y == "Iniciativa1") %>% select(Cenario.y, BeneficioAbsenteismo)
var = dplyr::pull(dados[,3])
teste = quantile(var, c(0.275, 0.975))
teste
teste = quantile(var, c(0.0275, 0.975))
teste
a = quantile(var, c(0.0275, 0.975))
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
media_text = paste("Media = ", mean(var))
media_text = paste("Media = ", round(mean(var),2))
a = quantile(var, c(0.0275, 0.975))
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
a = quantile(var, c(0.0275, 0.975))
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
a = quantile(var, round(c(0.0275, 0.975),2))
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
media_text = paste("Média = ", round(mean(var),2))
a = round(confint(var_fit, parm = c("mean")),2)
a = round(quantile(var, c(0.0275, 0.975)),2)
paste(media_text, "entre (", a[1],"e", a[2],") em 95% dos casos.")
shiny::runApp()
library(devtools)
install_github("pedroliman/oshcba")
library(dplyr)
runApp()
runApp()
shiny::runApp()
